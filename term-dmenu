#!/usr/bin/env dash

# term-dmenu is a dmenu/rofi-dmenu replacement that launches a terminal
# emulator to filter stdin using fzf. Arguments are passed to fzf.
# Requires a POSIX-compliant shell, fzf, and abduco.

export FZF_DEFAULT_OPTS="$* $FZF_DEFAULT_OPTS"
export TERM_DMENU_DIR="/tmp/term-dmenu-$$"

# This happens in three steps:

cleanup() {
	rm -rf ${TERM_DMENU_DIR}
}
trap cleanup EXIT
# 1. crate temporary directory
mkdir ${TERM_DMENU_DIR}

# 2. write stdin to a temporary file, separated by newlines, so the terminal
#    process can access it
IFS=$(printf '\n')
cat - >${TERM_DMENU_DIR}/input

# 3. open a floating terminal with supressed stderr, running a shell
#    command that does the following:.
# 	3a. filter $input in fzf
# 	3b. send the result to the named pipe in a detached abduco session
# I chose to do do step 3b in a detached abduco session because the
# session needs to stay alive after the terminal closes
# shellcheck disable=SC2016 # I don't want expressions to expand
floating-terminal dash -c \
	'output=$(fzf < ${TERM_DMENU_DIR}/input); export output; abduco -rnf term-dmenu dash -c "echo \"$output\" >${TERM_DMENU_DIR}/output" 2>/dev/null' 2>/dev/null

# 4. send the value to stdout
cat <${TERM_DMENU_DIR}/output

# vi:ft=sh

